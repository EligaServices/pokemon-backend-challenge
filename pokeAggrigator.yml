openapi: 3.0.3
info:
  title: Poke Aggrigator
  description: |-
    This is a simple aggrigator for the Poke API. The aggrigator gathers some Poke API data and transforms it to our specified use case. Have fun with it.
  version: 1.0.0
paths:
  /evolution-stats/{pokemonId}:
    get:
      tags:
        - Poke Aggrigator
      summary: Get evolutions with base statistics
      operationId: addPet
      parameters:
        - name: pokemonId
          in: path
          description: ID of pokemon to return
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 1154
        - name: trackingId
          in: header
          description: ID for tracking purposes
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvolutionStats"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400ErrorResponse"
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/500ErrorResponse"

components:
  schemas:
    EvolutionStats:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            example: 1
          name:
            type: string
            example: bulbasaur
          stats:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  example: attack
                score:
                  type: integer
                  example: 49

    400ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 400
        message:
          type: string
          example: Tracking code missing

    500ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 500
        message:
          type: string
          example: An unexpected error occured

  requestBodies:
    Pet:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EvolutionStats"
